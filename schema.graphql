type Gateway @entity {
  id: ID!
  tokens: [String!]
  txHash: String!
  timestamp: BigInt!
  blockNumber: BigInt!
}

type DefaultGateway @entity {
  id: ID!
  gateway: String!
  txHash: String!
  timestamp: BigInt!
  blockNumber: BigInt!
}

type TxToL1 @entity {
  id: ID!
  from: String!
  to: String!
  seqNum: BigInt!
  data: String!
  txHash: String!
  timestamp: BigInt!
  blockNumber: BigInt!
}

type TxToL2 @entity {
  id: ID!
  from: String!
  to: String!
  seqNum: BigInt!
  data: String!
  txHash: String!
  timestamp: BigInt!
  blockNumber: BigInt!
}

type InboundTransferFinalized @entity {
  id: ID!
  token: String!
  from: String!
  to: String!
  transferId: BigInt!
  amount: BigInt!
  data: String!
  txHash: String!
  timestamp: BigInt!
  blockNumber: BigInt!
}

type OutboundTransferInitiated @entity {
  id: ID!
  token: String!
  from: String!
  to: String!
  transferId: BigInt!
  amount: BigInt!
  data: String!
  txHash: String!
  timestamp: BigInt!
  blockNumber: BigInt!
}

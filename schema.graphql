type Deposit @entity {
  id: ID!
  destination: String!
  sender: String!
  value: BigInt!
  tokenAddress: String!
  blockNumber: BigInt!
  seqNum: BigInt!
  timestamp: BigInt!
}

type WithdrawRedirected @entity {
  id: ID!
  user: String!
  liquidityProvider: String!
  erc20: String!
  amount: BigInt!
  exitNum: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
}
type WithdrawExecuted @entity {
  id: ID!
  initialDestination: String!
  destination: String!
  erc20: String!
  amount: BigInt!
  exitNum: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type WithdrawToken @entity {
  id: ID!
  l1Address: String!
  destination: String!
  exitNum: BigInt!
  amount: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type MintAndCallTriggered @entity {
  id: ID!
  success: Boolean!
  sender: String!
  dest: String!
  amount: BigInt!
  blockNumber: BigInt!
}

type L2ToL1Transaction @entity {
  id: ID!
  caller: String!
  destination: String!
  uniqueId: BigInt!
  batchNumber: BigInt!
  indexInBatch: BigInt!
  arbBlockNum: BigInt!
  ethBlockNum: BigInt!
  timestamp: BigInt!
  callvalue: BigInt!
  data: String!
}

type InboxMessageDelivered @entity {
  id: ID!
  messageNum: BigInt!
  data: String!
}

type MessageDelivered @entity {
  id: ID!
  messageIndex: BigInt!
  beforeInboxAcc: String!
  inbox: String!
  kind: Int!
  sender: String!
  messageData: String!
}